<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置spring的IOC，把service对象配置进来 -->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>

    <!--
        spring中基于xml的aop配置步骤
        1、把通知Bean也交给spring来管理
        2、使用aop：config标签开始AOP的配置
        3、使用aop：aspect标签配置切面
            id属性：给切面提供一个唯一标识
            ref属性：是指定通知类bean的id
        4、在aop:aspect标签的内部使用对应标签来配置通知的类型
            我们现在的示例是让printLog方法在切入点方法之前执行，所以是前置通知
            aop:before：表示前置通知
            method用于指定logger类中，那个方法时前置通知
            pointcut属性：用于指定切入点表达式，该表达式的含义指的是对业务层中哪些方法增强

           切入点表达式的写法：
                关键字：execution(表达式)
                表达式：
                    访问修饰符 返回值   包名.包名...类名.方法名(参数列表)
                标准的表达式写法：
                public void com.itheima.service.impl.AccountServiceImpl.AddAccount();
    -->
    <bean id="logger" class="com.itheima.service.utils.Logger"></bean>

    <!-- 配置AOP -->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect id="logAdvice" ref="logger">
            <aop:before method="printLog" pointcut="execution( public void com.itheima.service.impl.AccountServiceImpl.addAccount() )"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>
